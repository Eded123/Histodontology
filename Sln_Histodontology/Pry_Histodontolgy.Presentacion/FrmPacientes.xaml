<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System_Windows_Forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" mc:Ignorable="d"
	x:Class="Pry_Histodontolgy.Presentacion.FrmPacientes"
	x:Name="Window"
	Title="FrmPacientes"
	Width="1021" Height="691" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
	<Window.Resources>
		<Style x:Key="btnSalir2" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnSalirMouseEnter">
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="label" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas x:Name="btnSalir" Margin="0,0,-4.167,-11.458">
							<Rectangle x:Name="rectangle" Stroke="#FFB7B7B7" Width="26.664" Height="36.372" Canvas.Top="3.336" Opacity="0">
								<Rectangle.Effect>
									<BlurEffect Radius="20"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="Red" Offset="0"/>
										<GradientStop Color="Red" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Label x:Name="label" Width="24" Height="39.708" Content="x" FontFamily="Arial" FontSize="26.667" Foreground="#FF959595" Canvas.Left="2.664" Background="#00FF8181"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnSalirMouseEnter_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnSalirMouseEnter_BeginStoryboard" Storyboard="{StaticResource btnSalirMouseEnter}"/>
								</Trigger.EnterActions>
								<Setter Property="Effect" TargetName="rectangle">
									<Setter.Value>
										<BlurEffect Radius="20"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type Button}" x:Key="btnNuevo">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="AnimaNuevo">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="btnNuevo">
									<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.24"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="btnNuevo">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.154"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnNuevo">
									<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.109"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnNuevo">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.077"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="animacionClickbtnNuevo"/>
						</ControlTemplate.Resources>
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="btnNuevo">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.24"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="btnNuevo">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.154"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnNuevo">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.149"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnNuevo">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.383"/>
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
												<DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Unfocused"/>
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="VisualStateGroup"/>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="btnNuevo" RenderTransformOrigin="0.5,0.5" Source="031.png" Stretch="Fill" ToolTip="Nuevo Usuario">
								<Image.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Image.RenderTransform>
							</Image>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Image x:Name="image" Margin="0" Source="3.png" Stretch="Fill"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsCancel" Value="False"/>
							<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
							<Trigger Property="IsCancel" Value="False"/>
							<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type Button}" x:Key="btnHistoriaClinica">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="btnHistoriaClinica">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.24"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="btnHistoriaClinica">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.154"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnHistoriaClinica">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.113"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnHistoriaClinica">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.182"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1.009"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.002"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.22"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1.02"/>
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
												<DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="btnHistoriaClinica" RenderTransformOrigin="0.5,0.5" Source="032.png" Stretch="Fill" ToolTip="Historia Clínica">
								<Image.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Image.RenderTransform>
							</Image>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Image x:Name="image" Margin="0" Opacity="1" Source="2.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
								<Image.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Image.RenderTransform>
							</Image>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type Button}" x:Key="btnInformacionCliente">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="btnInformacionCliente">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.24"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="btnInformacionCliente">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.328"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnInformacionCliente">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.209"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnInformacionCliente">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.613"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
												<DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="btnInformacionCliente" RenderTransformOrigin="0.5,0.5" Source="046.png" Stretch="Fill" ToolTip="Informacion del Paciente">
								<Image.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Image.RenderTransform>
							</Image>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Image x:Name="image" Margin="0,-0.532,0,0" Opacity="0" Source="1.png" Stretch="Fill" Visibility="Hidden"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type Button}" x:Key="btnPagos">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="btnPagos">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.24"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="btnPagos">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.413"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnPagos">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.149"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnPagos">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.373"/>
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
												<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="btnPagos" RenderTransformOrigin="0.5,0.5" Source="058.png" Stretch="Fill" ToolTip="Factura y Pagos">
								<Image.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Image.RenderTransform>
							</Image>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Image x:Name="image" Source="5.png" Stretch="Fill"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnOdontograma" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="btnOdontograma">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.24"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="btnOdontograma">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.413"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnOdontograma">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.149"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnOdontograma">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.397"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="btnOdontograma" RenderTransformOrigin="0.5,0.5" Source="098.png" Stretch="Fill" ToolTip="Hodontograma y fotos">
								<Image.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Image.RenderTransform>
							</Image>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Image x:Name="image" Source="6.png" Stretch="Fill"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnSalir" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="btnSalir1">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.24"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="btnSalir1">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.154"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnSalir1">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.213"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnSalir1">
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.312"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.01"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="btnSalir1" RenderTransformOrigin="0.5,0.5" Source="018.png" Stretch="Fill" ToolTip="Salir">
								<Image.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Image.RenderTransform>
							</Image>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Image x:Name="image" Source="4.png" Stretch="Fill"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
		<!-- Disabled Brushes are used for the Disabled look of each control -->
		<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
		<!-- Used for background of ScrollViewer, TreeView, ListBox, Expander, TextBox, Tab Control -->
		<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF"/>
		<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
		<LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#EEE" Offset="0.0"/>
			<GradientStop Color="#CCC" Offset="1.0"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#CCC" Offset="0.0"/>
			<GradientStop Color="#444" Offset="1.0"/>
		</LinearGradientBrush>
		<!-- DefaultedBorderBrush is used to show KeyBoardFocus -->
		<LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#777" Offset="0.0"/>
			<GradientStop Color="#000" Offset="1.0"/>
		</LinearGradientBrush>
	<!-- MouseOverBrush is used for MouseOver in Button, Radio Button, CheckBox -->
		<LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFF" Offset="0.0"/>
			<GradientStop Color="#AAA" Offset="1.0"/>
		</LinearGradientBrush>
	
	<!-- PressedBrush is used for Pressed in Button, Radio Button, CheckBox -->
		<LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#BBB" Offset="0.0"/>
			<GradientStop Color="#EEE" Offset="0.1"/>
			<GradientStop Color="#EEE" Offset="0.9"/>
			<GradientStop Color="#FFF" Offset="1.0"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#444" Offset="0.0"/>
			<GradientStop Color="#888" Offset="1.0"/>
		</LinearGradientBrush>

		<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>

	<!-- Simple Repeat Button - This is used by Simple ScrollBar for the up and down buttons -->
		<Style x:Key="SimpleRepeatButton" d:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
			<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Grid>
							<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
							<ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	<!-- Simple ScrollRepeatButton Style - This RepeatButton is used above and below the Thumb in the Scrollbar. They are set to transparent si that they do not show over the scrollbar -->
		<Style x:Key="SimpleScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Grid>
							<Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	<!-- Simple Thumb - The Thumb is the draggable part of the Scrollbar -->
		<Style x:Key="SimpleThumbStyle" d:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid Margin="0,0,0,0" x:Name="Grid">
							<Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="2" RadiusY="2" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
							<Trigger Property="IsDragging" Value="True"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	<!-- Simple ScrollBar  This makes use of SimpleThumb, SimpleRepeatButton and SimpleScrollRepeatButton -->
	
		<Style x:Key="SimpleScrollBar" TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="18"/>
								<RowDefinition Height="0.00001*"/>
								<RowDefinition MaxHeight="18"/>
							</Grid.RowDefinitions>
						
							<RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineUpCommand">
								<Grid>
									<Path x:Name="DecreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z"/>
								</Grid>
							</RepeatButton>
						
						<!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
							<Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
								<Track.Thumb>
									<Thumb Style="{DynamicResource SimpleThumbStyle}"/>
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton x:Name="PageUp" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand"/>
								</Track.IncreaseRepeatButton>
								<Track.DecreaseRepeatButton>
									<RepeatButton x:Name="PageDown" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand"/>
								</Track.DecreaseRepeatButton>
							</Track>
						
							<RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineDownCommand">
								<Grid>
									<Path x:Name="IncreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z"/>
								</Grid>
							</RepeatButton>
						</Grid>
					
					<!-- This uses a single template for ScrollBar and rotate it to be Horizontal
					It also changes the commands so that the it does Left and Right instead of Up and Down Commands -->
						<ControlTemplate.Triggers>
							<Trigger Property="Orientation" Value="Horizontal">

							<!-- Rotate the ScrollBar from Vertical to Horizontal -->
								<Setter Property="LayoutTransform" TargetName="GridRoot">
									<Setter.Value>
										<RotateTransform Angle="-90"/>
									</Setter.Value>
								</Setter>
							
							<!-- Track is bound to Orientation internally, so we need to rotate it back to Vertical -->
								<Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
					
							<!-- Change the commands to do Horizontal commands -->
								<Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat"/>
								<Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat"/>
								<Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
								<Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	<!-- Simple ScrollViewer 
	ScrollViewer is a Grid control which has a ContentPresenter and a Horizontal and Vertical ScrollBar 
	It is used by ListBox, MenuItem, ComboBox, and TreeView -->
		<Style x:Key="SimpleScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>
						
						<!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
							<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" />
							<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Vertical" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	<!-- Simple TextBox -->
		<Style x:Key="SimpleTextBox3" TargetType="{x:Type TextBox}">
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="txtfocus">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFFB900"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid>
							<Border x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="#FFBBBBBB" BorderThickness="1" Padding="2" CornerRadius="2">
							
							<!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
								<ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{DynamicResource SimpleScrollViewer}" Background="{TemplateBinding Background}"/>
						
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="FocusManager.LostFocus">
								<StopStoryboard BeginStoryboardName="txtfocus_BeginStoryboard"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="FocusManager.GotFocus">
								<BeginStoryboard x:Name="txtfocus_BeginStoryboard" Storyboard="{StaticResource txtfocus}"/>
							</EventTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnAgregar" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnMouseOverIngresarItem">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
									<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FFFFAF00"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="path">
									<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas>
							<Rectangle Stroke="White" StrokeLineJoin="Round" Width="42.5" Height="45" Fill="White" Canvas.Top="2" Canvas.Left="2"/>
							<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FFABABAB" Data="F1 M 386,264.333L 397.833,264.333L 396.403,284.055L 402.9,284.045L 391.96,295.311L 381.16,283.776L 387.657,283.766L 386,264.333 Z " Width="23.74" Height="25.373" Canvas.Left="11.66" Canvas.Top="11.938" StrokeThickness="2" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnMouseOverIngresarItem_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnMouseOverIngresarItem_BeginStoryboard" Storyboard="{StaticResource btnMouseOverIngresarItem}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnEliminar" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnMouseOverEliminarItem">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
									<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FFFFAF00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
									<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FFFFAF00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
									<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FFFFAF00"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="canvas">
									<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas>
							<Rectangle Stroke="White" StrokeLineJoin="Round" Width="42.5" Height="45" Fill="White" Canvas.Left="2" Canvas.Top="2"/>
							<Canvas x:Name="canvas" Height="24.229" Canvas.Left="11" Canvas.Top="11.715" Width="24.667">
								<Canvas.Effect>
									<DropShadowEffect Opacity="0"/>
								</Canvas.Effect>
								<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FFABABAB" Fill="#FFFFFFFF" Data="F1 M 196,149L 205,180L 225,180L 234.5,148" Width="24.563" Height="20.95" Canvas.Top="3.279" StrokeThickness="2"/>
								<Path x:Name="path1" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FFABABAB" Fill="#FFFFFFFF" Data="F1 M 215.333,142.833C 226.011,142.833 234.667,145.557 234.667,148.917C 234.667,152.276 226.011,155 215.333,155C 204.656,155 196,152.276 196,148.917C 196,145.557 204.656,142.833 215.333,142.833 Z " Width="24.667" Height="8.358" StrokeThickness="2"/>
								<Ellipse x:Name="ellipse" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FFABABAB" Fill="#FFFFFFFF" Width="7.745" Height="5.987" Canvas.Left="8.425" Canvas.Top="12.36" StrokeThickness="2"/>
							</Canvas>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnMouseOverEliminarItem_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnMouseOverEliminarItem_BeginStoryboard" Storyboard="{StaticResource btnMouseOverEliminarItem}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- Used for Checkmark, Radio button, TreeViewItem, Expander ToggleButton glyphs -->
		<SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
	
	
	<!-- Simple ComboBox Toggle Button - This is used in ComboBox to expand and collapse the ComboBox Popup-->
		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>
				<Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="5" RadiusY="5" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}"/>
				<Rectangle Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="5" RadiusY="5" Fill="{DynamicResource WindowBackgroundBrush}" Stroke="{DynamicResource NormalBorderBrush}"/>
				<Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Rectangle"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle"/>
					<Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle"/>
					<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
					<Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
	
	<!-- This is the area which contains the selected item in the ComboBox -->
	
		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<!-- This must be named as PART_ContentHost -->
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
		</ControlTemplate>

		<SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>
	<!-- Simple ComboBox 
	This uses the ComboBoxToggleButton to expand and collapse a Popup control
	SimpleScrollViewer to allow items to be scrolled and SimpleComboBoxItem to define the look of each item 
	The Popup shows a list of items in a StackPanel-->
	
		<Style x:Key="SimpleComboBox" TargetType="{x:Type ComboBox}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
						<!-- The ToggleButton is databound to the ComboBox itself to toggle IsDropDownOpen -->
							<ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" BorderBrush="#FFB1B1B1"/>
							<ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
						
						<!-- The TextBox must be named PART_EditableTextBox or ComboBox will not recognize it -->
							<TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>
						
						<!-- The Popup shows the list of items in the ComboBox. IsOpen is databound to IsDropDownOpen which is toggled via the ComboBoxToggleButton -->
							<Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
								<Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
									<Border x:Name="DropDownBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
									<ScrollViewer Margin="4,6,4,6" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
							
									<!-- The StackPanel is used to display the children by setting IsItemsHost to be True -->
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
								
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>						
						<!-- This forces the DropDown to have a minimum size if it is empty -->
							<Trigger Property="HasItems" Value="false">
								<Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
								<Setter Property="CornerRadius" Value="4" TargetName="DropDownBorder"/>
								<Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder"/>
							</Trigger>
							<Trigger Property="IsEditable" Value="true">
								<Setter Property="IsTabStop" Value="false"/>
								<Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
								<Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnAgregar1" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="image1" Source="button_plus_green.png" Stretch="Fill"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Image x:Name="image" Source="agregar.png" Stretch="Fill"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnEliminarItem" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Image x:Name="image1" Source="button_minus_red.png" Stretch="Fill"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Image x:Name="image" Source="eliminar.png" Stretch="Fill"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnBuscar" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnBuscarMouseOver">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnBuscar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnBuscar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas x:Name="btnBuscar" RenderTransformOrigin="0.5,0.5">
							<Canvas.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Rectangle Stroke="White" StrokeLineJoin="Round" Width="84" Height="69" Fill="White"/>
							<Ellipse x:Name="ellipse" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" StrokeThickness="3" Width="23.133" Height="20.562" Canvas.Left="33.729" Canvas.Top="22.639" Fill="White">
								<Ellipse.Effect>
									<DropShadowEffect Opacity="0"/>
								</Ellipse.Effect>
							</Ellipse>
							<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 267.629,280.44L 238.128,321.44" StrokeThickness="3" Width="12.589" Height="14.586" Canvas.Left="29.628" Canvas.Top="39.854">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnBuscarMouseOver_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnBuscarMouseOver_BeginStoryboard" Storyboard="{StaticResource btnBuscarMouseOver}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnGuardar" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnGuardarMouseOver">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnGuardar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.992"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnGuardar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="-0.5"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas x:Name="btnGuardar" RenderTransformOrigin="0.5,0.5">
							<Canvas.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Rectangle x:Name="rectangle" Stroke="White" StrokeLineJoin="Round" Width="84" Height="69" Fill="White"/>
							<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 232.009,224.94L 301.543,224.94C 303.962,224.94 311.946,235.731 311.946,237.94L 311.946,304.44C 311.946,306.649 309.984,308.44 307.565,308.44L 232.009,308.44C 229.589,308.44 227.628,306.649 227.628,304.44L 227.628,228.94C 227.628,226.731 229.589,224.94 232.009,224.94 Z " StrokeThickness="3" Width="37.817" Height="30.716" Canvas.Left="25.128" Canvas.Top="21.318" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path1" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 248.054,234.94L 289.878,234.94C 292.087,234.94 293.878,236.731 293.878,238.94L 293.878,271.94C 293.878,274.149 292.087,275.94 289.878,275.94L 248.054,275.94C 245.845,275.94 244.054,274.149 244.054,271.94L 244.054,238.94C 244.054,236.731 245.845,234.94 248.054,234.94 Z " StrokeThickness="3" Width="23.374" Height="16.131" Canvas.Left="32.006" Canvas.Top="24.749" Fill="White"/>
							<Path x:Name="path2" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 262.837,286.94L 276.737,286.94C 278.946,286.94 280.737,288.731 280.737,290.94L 280.737,304.44C 280.737,306.649 278.946,308.44 276.737,308.44L 262.837,308.44C 260.628,308.44 258.837,306.649 258.837,304.44L 258.837,290.94C 258.837,288.731 260.628,286.94 262.837,286.94 Z " StrokeThickness="3" Width="11.683" Height="9.438" Canvas.Left="38.196" Canvas.Top="42.596" Fill="White"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnGuardarMouseOver_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnGuardarMouseOver_BeginStoryboard" Storyboard="{StaticResource btnGuardarMouseOver}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnImprimir" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnImprimirMouseOver">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnImprimir" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnImprimir" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas x:Name="btnImprimir" RenderTransformOrigin="0.5,0.5">
							<Canvas.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Rectangle x:Name="rectangle" Stroke="White" StrokeLineJoin="Round" Width="84" Height="69" Fill="White"/>
							<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 241.331,248.027L 295.758,248.027C 298.262,248.027 308.23,255.191 308.23,257.706L 308.404,298.708C 308.404,301.223 306.373,303.263 303.868,303.263L 235.268,303.263C 232.763,303.263 230.732,301.223 230.732,298.708L 230.559,255.998C 230.559,253.482 249.835,243.471 241.331,248.027 Z " StrokeThickness="3" Width="38.345" Height="20.814" Canvas.Left="21.559" Canvas.Top="26.449" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path1" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 256.276,289.597L 282.86,289.597C 285.069,289.597 286.86,291.388 286.86,293.597L 286.86,311.22C 286.86,313.429 285.069,315.22 282.86,315.22L 256.276,315.22C 254.067,315.22 252.276,313.429 252.276,311.22L 252.276,293.597C 252.276,291.388 254.067,289.597 256.276,289.597 Z " StrokeThickness="3" Width="17.889" Height="10.053" Canvas.Left="31.826" Canvas.Top="40.807" Fill="White"/>
							<Path x:Name="path2" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 248.339,223.547L 290.797,223.547C 293.006,223.547 294.797,225.338 294.797,227.547L 294.797,258.266C 294.797,260.475 293.006,262.266 290.797,262.266L 248.339,262.266C 246.13,262.266 244.339,260.475 244.339,258.266L 244.339,227.547C 244.339,225.338 246.13,223.547 248.339,223.547 Z " StrokeThickness="3" Width="25.065" Height="14.351" Canvas.Left="28.238" Canvas.Top="19.127" Fill="White"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnImprimirMouseOver_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnImprimirMouseOver_BeginStoryboard" Storyboard="{StaticResource btnImprimirMouseOver}"/>
								</Trigger.EnterActions>
								<Setter Property="Fill" TargetName="rectangle" Value="White"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnLimpiar" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnLimpiarMouseOver">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path4" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path5" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnLimpiar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnLimpiar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas x:Name="btnLimpiar" RenderTransformOrigin="0.5,0.5">
							<Canvas.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Rectangle x:Name="rectangle" Stroke="White" StrokeLineJoin="Round" Height="69" Fill="White" Width="84"/>
							<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Fill="#FF610000" Data="F1 M 238.997,275.196L 275.259,237.013C 276.317,235.9 276.271,234.14 275.158,233.083L 275.158,233.083C 274.045,232.025 272.285,232.071 271.227,233.184L 234.965,271.367C 233.908,272.48 233.953,274.24 235.066,275.297L 235.066,275.297C 236.18,276.355 237.94,276.31 238.997,275.196 Z " StrokeThickness="3" Width="20.499" Height="14.507" Canvas.Left="29.178" Canvas.Top="26.104"/>
							<Path x:Name="path1" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 226.409,221.921L 250.816,248.459" StrokeThickness="3" Width="15.983" Height="12.074" RenderTransformOrigin="0.5,0.5" Canvas.Left="26.409" Canvas.Top="21.051">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="1.0012980784875147" ScaleY="0.99870360433580818"/>
										<SkewTransform AngleY="0.93508251953763022"/>
										<RotateTransform Angle="16.119"/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
							<Path x:Name="path2" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 245.957,275.8L 275.248,243.838C 276.84,242.101 278.947,242.286 279.955,244.252L 306.729,262.38L 291.508,275.559L 259.242,313.71C 259.242,313.71 258.517,309.072 257.51,307.106L 244.899,282.505C 243.891,280.539 244.365,277.537 245.957,275.8 Z " StrokeThickness="3" Width="27.436" Height="22.159" Canvas.Left="32.293" Canvas.Top="28.21" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path3" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 258.807,278.679L 270.418,298.701" StrokeThickness="3" Width="7.362" Height="7.669" Canvas.Left="38.004" Canvas.Top="38.439"/>
							<Path x:Name="path4" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 268.924,269.246L 282.3,288.134" StrokeThickness="3" Width="8.06" Height="7.349" Canvas.Left="42.006" Canvas.Top="35.76"/>
							<Path x:Name="path5" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 277.905,258.567L 295.319,273.813" StrokeThickness="3" Width="9.657" Height="6.314" Canvas.Left="45.558" Canvas.Top="32.73"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnLimpiarMouseOver_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnLimpiarMouseOver_BeginStoryboard" Storyboard="{StaticResource btnLimpiarMouseOver}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnSalir3" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnSalirMouseOver">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnSalir" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnSalir" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas x:Name="btnSalir" RenderTransformOrigin="0.5,0.5">
							<Canvas.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Rectangle x:Name="rectangle" Stroke="White" StrokeLineJoin="Round" Height="69" Fill="White" Width="84"/>
							<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 219.255,271.612L 219.346,262.867L 238.801,263.069L 238.868,256.573L 250.002,267.647L 238.338,278.308L 238.406,271.811L 219.255,271.612 Z " StrokeThickness="3" Width="19.542" Height="12.18" Canvas.Left="15.755" Canvas.Top="25.57" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path1" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 259.628,231.44L 298.629,231.44C 300.838,231.44 302.629,233.231 302.629,235.44L 302.629,297.44C 302.629,299.649 300.838,301.44 298.629,301.44L 259.628,301.44C 257.419,301.44 255.628,299.649 255.628,297.44L 255.628,235.44C 255.628,233.231 257.419,231.44 259.628,231.44 Z " StrokeThickness="3" Width="28.427" Height="34.166" Canvas.Left="35.639" Canvas.Top="14.121" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path2" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 276.129,243.503L 298.128,232.377C 300.338,231.26 302.128,232.145 302.128,234.354L 302.128,296.354C 302.128,298.563 300.338,301.26 298.128,302.377L 276.129,313.503C 273.919,314.621 272.129,313.735 272.129,311.526L 272.129,249.526C 272.129,247.317 273.919,244.621 276.129,243.503 Z " Fill="White" StrokeThickness="3" Width="19.134" Height="39.677" Canvas.Left="44.659" Canvas.Top="14.327">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path3" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 281.129,274.94C 282.371,274.94 283.379,276.283 283.379,277.94C 283.379,279.597 282.371,280.94 281.129,280.94C 279.886,280.94 278.879,279.597 278.879,277.94C 278.879,276.283 279.886,274.94 281.129,274.94 Z " StrokeThickness="3" Width="4.1" Height="4.1" Canvas.Left="48.896" Canvas.Top="34.393" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnSalirMouseOver_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnSalirMouseOver_BeginStoryboard" Storyboard="{StaticResource btnSalirMouseOver}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Key="animBtnNuevo">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="btnNuevo">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="lblNuevoPaciente">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="animBtnHistorial">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="btnHistorial">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="lblHistorial">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="animBtnInformacion">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image2">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="btnInforPaciente">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="lblInformacion">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="animBtnFacturaPagos">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image3">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="btnFacturaAbono">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="lblFactura">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="animBtnOdontograma">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image4">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="btnOdontograma">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="lblOdontograma">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="animBtnSalir">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image5">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="button5">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Style x:Key="btnSalir4" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="btnSalirMouseOver">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFF7E00"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnSalir" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnSalir" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Canvas x:Name="btnSalir" RenderTransformOrigin="0.5,0.5">
							<Canvas.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Rectangle x:Name="rectangle" Stroke="White" StrokeLineJoin="Round" Height="69" Fill="White" Width="84"/>
							<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 219.255,271.612L 219.346,262.867L 238.801,263.069L 238.868,256.573L 250.002,267.647L 238.338,278.308L 238.406,271.811L 219.255,271.612 Z " StrokeThickness="3" Width="19.542" Height="12.18" Canvas.Left="15.755" Canvas.Top="25.57" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path1" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 259.628,231.44L 298.629,231.44C 300.838,231.44 302.629,233.231 302.629,235.44L 302.629,297.44C 302.629,299.649 300.838,301.44 298.629,301.44L 259.628,301.44C 257.419,301.44 255.628,299.649 255.628,297.44L 255.628,235.44C 255.628,233.231 257.419,231.44 259.628,231.44 Z " StrokeThickness="3" Width="28.427" Height="34.166" Canvas.Left="35.639" Canvas.Top="14.121" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path2" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 276.129,243.503L 298.128,232.377C 300.338,231.26 302.128,232.145 302.128,234.354L 302.128,296.354C 302.128,298.563 300.338,301.26 298.128,302.377L 276.129,313.503C 273.919,314.621 272.129,313.735 272.129,311.526L 272.129,249.526C 272.129,247.317 273.919,244.621 276.129,243.503 Z " Fill="White" StrokeThickness="3" Width="19.134" Height="39.677" Canvas.Left="44.659" Canvas.Top="14.327">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
							<Path x:Name="path3" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF9D9D9D" Data="F1 M 281.129,274.94C 282.371,274.94 283.379,276.283 283.379,277.94C 283.379,279.597 282.371,280.94 281.129,280.94C 279.886,280.94 278.879,279.597 278.879,277.94C 278.879,276.283 279.886,274.94 281.129,274.94 Z " StrokeThickness="3" Width="4.1" Height="4.1" Canvas.Left="48.896" Canvas.Top="34.393" Fill="White">
								<Path.Effect>
									<DropShadowEffect Opacity="0"/>
								</Path.Effect>
							</Path>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="btnSalirMouseOver_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="btnSalirMouseOver_BeginStoryboard" Storyboard="{StaticResource btnSalirMouseOver}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFF" Offset="0.0"/>
			<GradientStop Color="#EEE" Offset="1.0"/>
		</LinearGradientBrush>
		<Style x:Key="SimpleTabItem" d:IsControlPart="True" TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid>
							<Border Margin="0,0,-4,0" x:Name="Border" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2,12,0,0">
								<ContentPresenter HorizontalAlignment="Center" Margin="12,2,12,2" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Panel.ZIndex" Value="100"/>
								<Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" TargetName="Border"/>
								<Setter Property="BorderThickness" Value="1,1,1,0" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnCellos" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="MouseEnter">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFFF5B7"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="Foco">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFFF5B7"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid" Background="#FFE6E6E6">
							<ContentPresenter x:Name="contentPresenter" OpacityMask="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True">
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="Foco_BeginStoryboard"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="Foco_BeginStoryboard" Storyboard="{StaticResource Foco}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="MouseEnter_BeginStoryboard" Storyboard="{StaticResource MouseEnter}"/>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<StopStoryboard BeginStoryboardName="MouseEnter_BeginStoryboard"/>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="16"/>
		</Style>
		<Style x:Key="SimpleTabControl2" TargetType="{x:Type TabControl}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid KeyboardNavigation.TabNavigation="Local">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
						
						<!-- TabPanel is a layout container which allows the TabItems to wrap and re-order when selected
						The implementation knows to use this control because it is marked IsItemsHost = True -->
							<TabPanel Grid.Row="0" Margin="0,0,4,-1" x:Name="HeaderPanel" Background="Transparent" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>
						
							<Border Grid.Row="1" x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
								<Border.BorderBrush>
	
								<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="White" Offset="1"/>
										<GradientStop Color="#CCC" Offset="0.957"/>
										<GradientStop Color="White"/>
										<GradientStop Color="#FFCCCCCC" Offset="0.034"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
							
							<!-- The implementation switches the content. This control must be named PART_SelectedContentHost -->
								<ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
							
							</Border>
						</Grid>
					
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
								<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
							</Trigger>
						</ControlTemplate.Triggers>
				
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnNuevo">
			<BeginStoryboard x:Name="animBtnNuevo_BeginStoryboard" Storyboard="{StaticResource animBtnNuevo}"/>
			<StopStoryboard BeginStoryboardName="animBtnHistorial_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnInformacion_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnFacturaPagos_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnOdontograma_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnSalir_BeginStoryboard1"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnHistorial">
			<BeginStoryboard x:Name="animBtnHistorial_BeginStoryboard" Storyboard="{StaticResource animBtnHistorial}"/>
			<StopStoryboard BeginStoryboardName="animBtnNuevo_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnInformacion_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnFacturaPagos_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnOdontograma_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnSalir_BeginStoryboard1"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnInforPaciente">
			<BeginStoryboard x:Name="animBtnInformacion_BeginStoryboard" Storyboard="{StaticResource animBtnInformacion}"/>
			<StopStoryboard BeginStoryboardName="animBtnNuevo_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnHistorial_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnFacturaPagos_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnOdontograma_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnSalir_BeginStoryboard1"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnFacturaAbono">
			<BeginStoryboard x:Name="animBtnFacturaPagos_BeginStoryboard" Storyboard="{StaticResource animBtnFacturaPagos}"/>
			<StopStoryboard BeginStoryboardName="animBtnNuevo_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnHistorial_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnInformacion_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnOdontograma_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnSalir_BeginStoryboard1"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btnOdontograma">
			<BeginStoryboard x:Name="animBtnOdontograma_BeginStoryboard" Storyboard="{StaticResource animBtnOdontograma}"/>
			<StopStoryboard BeginStoryboardName="animBtnNuevo_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnHistorial_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnInformacion_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnFacturaPagos_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnSalir_BeginStoryboard1"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="button5">
			<BeginStoryboard x:Name="animBtnSalir_BeginStoryboard1" Storyboard="{StaticResource animBtnSalir}"/>
			<StopStoryboard BeginStoryboardName="animBtnNuevo_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnHistorial_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnInformacion_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnFacturaPagos_BeginStoryboard"/>
			<StopStoryboard BeginStoryboardName="animBtnOdontograma_BeginStoryboard"/>
		</EventTrigger>
	</Window.Triggers>
	<Grid x:Name="LayoutRoot">
		<Grid.ColumnDefinitions>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
		<Grid Margin="0,-1.559,-1,0">
			<Rectangle x:Name="Rectangulo_Contenedor" Margin="0,1.559,1,0">
				<Rectangle.Fill>
	
					<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
						<GradientStop Color="#FF141414"/>
						<GradientStop Color="#FF03004B" Offset="0.829"/>
						<GradientStop Color="#FF05003D" Offset="1"/>
						<GradientStop Color="#FF5A5A5A" Offset="0.433"/>
					</LinearGradientBrush>

				</Rectangle.Fill>
			</Rectangle>
			<Rectangle VerticalAlignment="Top" Height="63.055" >
				<Rectangle.Fill>
	
				<!-- DefaultedBorderBrush is used to show KeyBoardFocus -->
					<LinearGradientBrush EndPoint="0.224,1.098" StartPoint="0.266,0.046">
						<GradientStop Offset="1" Color="#006A6A6A"/>
						<GradientStop Color="#8D01001D" Offset="0.973"/>
					</LinearGradientBrush>

				</Rectangle.Fill>
			</Rectangle>
		</Grid>
		<Rectangle Margin="4.428,60.25,3.572,10.805">
			<Rectangle.Fill>
				<LinearGradientBrush EndPoint="0.152,0.456" StartPoint="1.004,0.46">
					<GradientStop Color="White"/>
					<GradientStop Color="White" Offset="0.996"/>
				</LinearGradientBrush>
			</Rectangle.Fill>
			<Rectangle.Stroke>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FFFFE281" Offset="0.0"/>
					<GradientStop Color="#FFFFE281" Offset="1.0"/>
					<GradientStop Color="White" Offset="0.25"/>
					<GradientStop Color="White" Offset="0.724"/>
				</LinearGradientBrush>
			</Rectangle.Stroke>
		</Rectangle>
		<Label Content="Histo" FontSize="32" Foreground="White" Background="#00FF0000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="24.287,3.687,0,0" FontWeight="Bold"/>
		<Label Content="dontology" Foreground="White" HorizontalAlignment="Left" Margin="108.17,16.622,0,0" VerticalAlignment="Top" FontSize="18.667" Width="111.576"/>
		<Button x:Name="btnSalir" HorizontalAlignment="Right" Margin="0,10.515,23.336,0" Style="{DynamicResource btnSalir2}" VerticalAlignment="Top" Width="26.664" Height="39.949" Content="Button"  IsTabStop="False" TabIndex="12" Click="btnSalir_Click" />
		<Label Content="   Paciente ::" Foreground="White" Margin="0,10.515,54.827,0" VerticalAlignment="Top" FontSize="21.333" FontWeight="Bold" HorizontalAlignment="Right" Width="133.576"/>
		<Grid x:Name="MenuBotones" HorizontalAlignment="Left" Margin="52.25,93.959,0,103.638" Width="67.123">
			<Grid x:Name="BtnNuevo" Height="72" Margin="-3.93,-5.959,-3.627,0" VerticalAlignment="Top">
				<Image x:Name="image" Source="031.png" Stretch="Fill" Opacity="0"/>
				<Button x:Name="btnNuevo" Content="Button" Style="{DynamicResource btnNuevo}" Margin="5,5.959,4.75,8" Click="btnNuevo_Click"/>
			</Grid>
			<Grid x:Name="BtnHistorial" Height="72" Margin="-3.93,82.041,-3.627,0" VerticalAlignment="Top">
				<Image x:Name="image1" Source="032.png" Stretch="Fill" Opacity="0"/>
				<Button x:Name="btnHistorial" Content="" Margin="3.93,5.959,4.75,8" Style="{DynamicResource btnHistoriaClinica}" Click="btnHistorial_Click"/>
			</Grid>
			<Grid x:Name="BtnInformacionPaciente" Height="72.345" Margin="-3.93,165.041,-3.627,0" VerticalAlignment="Top">
				<Image x:Name="image2" Source="046.png" Stretch="Fill" Opacity="0"/>
				<Button x:Name="btnInforPaciente" Content="" Margin="3.93,7.304,5.82,7" Style="{DynamicResource btnInformacionCliente}" Click="btnInforPaciente_Click"/>
			</Grid>
			<Grid x:Name="BtnFacturaPagos" Height="73.606" Margin="-4.93,0,-2.627,170.411" VerticalAlignment="Bottom">
				<Image x:Name="image3" Source="058.png" Stretch="Fill" Opacity="0"/>
				<Button x:Name="btnFacturaAbono" Content="" Margin="4.93,7.565,4.82,8" Style="{DynamicResource btnPagos}" Click="btnFacturaAbono_Click"/>
			</Grid>
			<Grid x:Name="BtnOdontograma" Height="58.041" Margin="0,0,2.193,91.501" VerticalAlignment="Bottom">
				<Image x:Name="image4" Source="098.png" Stretch="Fill" Opacity="0" Margin="-6,-5.82,-4.82,-8.139"/>
				<Button x:Name="btnOdontograma" Content="" Style="{DynamicResource btnOdontograma}" Click="btnOdontograma_Click"/>
			</Grid>
			<Grid x:Name="BtnSalir" Height="58.041" VerticalAlignment="Bottom">
				<Image x:Name="image5" Source="018.png" Stretch="Fill" Opacity="0" Margin="-6.97,-7.961,-5.907,-5.998"/>
				<Button x:Name="button5" Content="" Margin="1.07,0,0,0" Style="{DynamicResource btnSalir}"/>
			</Grid>
		</Grid>
		<Separator Margin="-105.624,0,0,318.37" VerticalAlignment="Bottom" Height="8.004" RenderTransformOrigin="0.5,0.5" Background="#FFE6E6E6" HorizontalAlignment="Left" Width="557.917">
			<Separator.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform Angle="90.097"/>
					<TranslateTransform/>
				</TransformGroup>
			</Separator.RenderTransform>
		</Separator>
		<Label x:Name="lblNuevoPaciente" Content="Nuevo Paciente" Foreground="White" Margin="24.287,13.391,0,0" VerticalAlignment="Top" FontSize="21.333" HorizontalAlignment="Center" Width="158.034" Opacity="0"/>
		<Label x:Name="lblHistorial" Content="Historial del paciente" Foreground="White" Margin="414.507,12.071,396.833,0" VerticalAlignment="Top" FontSize="21.333" Opacity="0"/>
		<Label x:Name="lblInformacion" Content="Informacion del paciente" Foreground="White" Margin="414.507,12.071,356.833,0" VerticalAlignment="Top" FontSize="21.333" Opacity="0"/>
		<Label x:Name="lblFactura" Content="Factura y Abonos" Foreground="White" Margin="443.793,12.071,396.833,0" VerticalAlignment="Top" FontSize="21.333" Opacity="0"/>
		<Label x:Name="lblOdontograma" Content="Odontograma" Foreground="White" Margin="443.793,12.071,396.833,0" VerticalAlignment="Top" FontSize="21.333" Opacity="0"/>
		<TabControl x:Name="tbContenedor" Margin="172.5,67.361,4.333,25.638" Style="{DynamicResource SimpleTabControl2}" BorderBrush="{DynamicResource DisabledBackgroundBrush}" >
			<TabItem x:Name="ItemNuevo" Style="{DynamicResource SimpleTabItem}" Header="TabItem" Opacity="0" TabIndex="13" IsTabStop="False" >
				<Canvas x:Name="Indicadores056" Margin="0,0,0.817,-7.96" IsHitTestVisible="True">
					<Canvas Width="804.099" Height="132.154" Canvas.Left="17.527" Canvas.Top="328.596"/>
					<Grid Width="834" Height="575.5" Canvas.Top="-0.499">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="rectangle1" Margin="15.325,251.178,13.48,89.921" >
							<Rectangle.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Rectangle.RenderTransform>
							<Rectangle.Stroke>
	
								<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<GradientStop Color="#EEE" Offset="1"/>
									<GradientStop Color="#CCC"/>
								</LinearGradientBrush>
							</Rectangle.Stroke>
						</Rectangle>
						<Label Content="Apellidos" Margin="22.62,88.955,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
						<Label Content="Telefono Fijo" Margin="22.618,150.334,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
						<Label Content="Fecha de naciemiento&#xa;" Margin="335.883,177.816,370.117,0" VerticalAlignment="Top" Height="29.955"/>
						<Label Content="Dirección" Margin="22.62,208.524,0,0" Height="23.982" VerticalAlignment="Top" HorizontalAlignment="Left"/>
						<Label Content="E-mail" Margin="22.62,178.925,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
						<TextBox x:Name="txtCodigo1" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="1" Margin="128.166,89.052,162.707,0" VerticalAlignment="Top"  />
						<TextBox x:Name="txtMeta1" BorderBrush="#FFE4E4E4" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="190.334" Style="{DynamicResource SimpleTextBox3}" TabIndex="5"  HorizontalAlignment="Left" Margin="128.166,151.497,0,0"  Height="23.459" VerticalAlignment="Top"  />
						<TextBox x:Name="txtPeriodicidad1" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="190.334" Style="{DynamicResource SimpleTextBox3}" TabIndex="7"  HorizontalAlignment="Left" Margin="128.166,181.218,0,0" VerticalAlignment="Top"  />
						<TextBox x:Name="txtCodigoCorte1" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="9" Margin="128.166,211.885,162.707,0" VerticalAlignment="Top"  />
						<Label Content="Estado Civil" Margin="335.883,118.901,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
						<Label Content="Sexo" Margin="21.209,118.901,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
						<Rectangle Fill="White" HorizontalAlignment="Left" Height="25.96" Margin="128.166,118.907,0,0" VerticalAlignment="Top" Width="190.334" Stroke="#FFE4E4E4"/>
						<RadioButton Content=" Hombre" HorizontalAlignment="Left" Margin="151.66,123.901,0,0" Style="{DynamicResource SimpleRadioButton}" VerticalAlignment="Top"/>
						<RadioButton Content=" Mujer" HorizontalAlignment="Left" Margin="238.66,123.901,0,0" Style="{DynamicResource SimpleRadioButton}" VerticalAlignment="Top"/>
						<Rectangle Fill="White" Height="25.96" Margin="0,117.961,162.707,0" Stroke="#FFE4E4E4" VerticalAlignment="Top" HorizontalAlignment="Right" Width="208.243"/>
						<RadioButton Content=" Soltero" Margin="0,123.901,297.604,0" Style="{DynamicResource SimpleRadioButton}" VerticalAlignment="Top" HorizontalAlignment="Right"/>
						<RadioButton Content=" Casado" Margin="0,123.901,212.627,0" Style="{DynamicResource SimpleRadioButton}" VerticalAlignment="Top" HorizontalAlignment="Right"/>
						<DatePicker Margin="0,179.984,162.707,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="207.41"/>
						<Label Content="Telefono Celular" Margin="335.74,150.333,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
						<TextBox x:Name="txtMeta1_Copy" BorderBrush="#FFE4E4E4" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="5" Margin="0,150.551,162.707,0" HorizontalAlignment="Right" Width="208.243"  Height="23.459" VerticalAlignment="Top"  />
						<Label Content="Tipo Documento" Margin="22.62,26.606,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<WindowsFormsHost Height="234.401" HorizontalAlignment="Left" Margin="15.325,251.178,0,0" x:Name="wfhIndicadores1" VerticalAlignment="Top" Width="805.195" Background="White" Focusable="False">
							<System_Windows_Forms:DataGridView x:Name="GridIndicadores1"  />
						</WindowsFormsHost>
						<Button x:Name="btnAgregarItemIndicador056" Style="{DynamicResource btnAgregar}" Width="49.5" Content="Button"  TabIndex="11" HorizontalAlignment="Right" Margin="0,184.506,81.594,0" ToolTip="Agregar Item" Height="48" VerticalAlignment="Top"  />
						<Button x:Name="btnEliminarItemIndicador056" Style="{DynamicResource btnEliminar}" Width="49.5" Content="Button"  TabIndex="12" HorizontalAlignment="Right" Margin="0,184.506,27.5,0" ToolTip="Eliminar Item" Height="48" VerticalAlignment="Top"  />
						<TextBox x:Name="txtItemIndicadoresInternos1" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="5" Margin="44.856,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="24" Visibility="Collapsed"  />
						<TextBox BorderBrush="#FFE4E4E4" BorderThickness="1" Height="23.459" Margin="10,10,823.764,0" x:Name="txtItem1" Style="{DynamicResource SimpleTextBox3}" TabIndex="5" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" />
						<Grid x:Name="FOTO" HorizontalAlignment="Right" Height="147.404" Margin="0,26.606,13.48,0" VerticalAlignment="Top" Width="133.822">
							<Rectangle Fill="#FFF3F3F3" Stroke="DarkGray"/>
							<Label x:Name="lblFoto" Content="FOTO" Foreground="DarkGray" Margin="34.856,55.262,30.592,54.184" FontSize="21.333"/>
							<Image Margin="0,1.13,0,0" Stretch="None" d:LayoutOverrides="GridBox"/>
						</Grid>
						<Label Content="Nombres" Margin="22.62,56.878,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<TextBox x:Name="txtNombreIndicador1_Copy" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="0" Margin="128.957,57.98,162.707,0" VerticalAlignment="Top"  />
						<Label Content="No. Documento" Margin="337.8,25.207,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
						<TextBox x:Name="txtNombreIndicador1_Copy1" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="0" Margin="0,26.606,162.707,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="208.243"  />
						<ComboBox x:Name="cbUnidadMedición030_Copy" Height="25.5" Style="{DynamicResource SimpleComboBox}" TabIndex="10" Margin="128.957,24.565,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="189.162">
							<!--<ComboBoxItem Content="Tasa"/>
                        	<ComboBoxItem Content="Oportunidad"/>
                        	<ComboBoxItem Content="Proporción"/>
                        	<ComboBoxItem Content="Porcentaje"/>
                        	<ComboBoxItem Content="Número"/>-->
						</ComboBox>
					</Grid>
					<Button x:Name="btnBuscar1" Style="{DynamicResource btnBuscar}" Width="84" Height="69" Content="Button" ToolTip="Buscar Indicadores 056" Canvas.Left="459" Canvas.Top="488.5" TabIndex="13"  />
					<Button x:Name="btnGuardar1" Style="{DynamicResource btnGuardar}" Width="84" Height="69" Content="Button" Canvas.Left="531" Canvas.Top="488.5" ToolTip="Guardar Indicadores 056" TabIndex="14"  />
					<Button x:Name="btnImprimir1" Style="{DynamicResource btnImprimir}" Width="84" Height="69" Content="Button" Canvas.Left="612" Canvas.Top="488.5" ToolTip="Botón deshabilitado" TabIndex="15" IsEnabled="False" />
					<Button x:Name="btnLimpiar1" Style="{DynamicResource btnLimpiar}" Height="69" Content="Button" Width="84" Canvas.Left="676.5" Canvas.Top="488.5" ToolTip="Limpiar campos" TabIndex="16" />
					<Button x:Name="btnSalir1" Style="{DynamicResource btnSalir4}" Width="84" Height="69" Content="Button" Canvas.Left="748.5" Canvas.Top="488.5" ToolTip="Salir" TabIndex="17"  />
				</Canvas>
			</TabItem>
			<TabItem x:Name="itemHistorial" Style="{DynamicResource SimpleTabItem}" Header="TabItem" Opacity="0" TabIndex="13" IsTabStop="False"  >
				<Canvas x:Name="Indicadores1" Margin="0,0,0.817,-7.96">
					<Canvas Width="804.099" Height="132.154" Canvas.Left="17.527" Canvas.Top="328.596"/>
					<Grid Width="834" Height="575.5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="118*" />
							<ColumnDefinition Width="716*" />
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="rectangle2" Margin="15,261.531,13,89.921" Grid.ColumnSpan="2">
							<Rectangle.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Rectangle.RenderTransform>
							<Rectangle.Stroke>
	
								<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<GradientStop Color="#EEE" Offset="1"/>
									<GradientStop Color="#CCC"/>
								</LinearGradientBrush>
							</Rectangle.Stroke>
						</Rectangle>
						<Label Content="Código" Margin="24,56.793,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, GridBox" />
						<Label Content="Nombre indicador" Margin="24,26.606,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, GridBox" Grid.ColumnSpan="2" />
						<Label Content="Meta" HorizontalAlignment="Left" Margin="24,141.868,0,0" VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment, GridBox" />
						<Label Content="Justificación" Margin="189,55.35,453,0" VerticalAlignment="Top" d:LayoutOverrides="Width" Grid.Column="1" />
						<Label Content="Origen información" Margin="185,144.139,389,0" VerticalAlignment="Top" Height="29.955" d:LayoutOverrides="HorizontalAlignment, Width" Grid.Column="1" />
						<Label Content="Código de corte" HorizontalAlignment="Left" Margin="24,199.064,0,0" Height="31.96" VerticalAlignment="Top" d:LayoutOverrides="GridBox" Grid.ColumnSpan="2" />
						<Label Content="Responsable" Margin="186,172.724,454,0" Height="27.96" VerticalAlignment="Top" Grid.Column="1" />
						<Label Content="Periodicidad" HorizontalAlignment="Left" Margin="24,170.459,0,0" VerticalAlignment="Top" d:LayoutOverrides="GridBox" />
						<TextBox x:Name="txtOrigenInformacion030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="6" Margin="296,142.139,32,0" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox x:Name="txtResponsable030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="8" Margin="296,169.968,33,0" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox x:Name="txtCodigo030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="165.719" Style="{DynamicResource SimpleTextBox3}" TabIndex="1"  HorizontalAlignment="Left" Margin="10,56.888,0,0" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox x:Name="txtNombreIndicador030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="0" Margin="12,27.708,33,0" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox x:Name="txtMeta030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="169.23" Style="{DynamicResource SimpleTextBox3}" TabIndex="5"  HorizontalAlignment="Left" Margin="12,142.037,0,0" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox x:Name="txtJustificacion030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="2" Margin="296,56.888,33,0" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox x:Name="txtPeriodicidad030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="169.23" Style="{DynamicResource SimpleTextBox3}" TabIndex="7"  HorizontalAlignment="Left" Margin="12,169.866,0,0" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox x:Name="txtCodigoCorte030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="169.792" Style="{DynamicResource SimpleTextBox3}" TabIndex="9"  HorizontalAlignment="Left" Margin="11,197.695,0,0" VerticalAlignment="Top"  Grid.Column="1" />
						<WindowsFormsHost Height="224.048" HorizontalAlignment="Left" Margin="15,261.531,0,0" x:Name="wfhIndicadores030" VerticalAlignment="Top" Width="805.195" Background="White" Focusable="False" Grid.ColumnSpan="2">
							<System_Windows_Forms:DataGridView x:Name="GridIndicadores030"  />
						</WindowsFormsHost>
						<Label Content="Denominador" HorizontalAlignment="Left" Margin="24,112.29,0,0" VerticalAlignment="Top" d:LayoutOverrides="GridBox" />
						<TextBox x:Name="txtDenominador030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="4" Margin="11,113.868,33,0" VerticalAlignment="Top"  Grid.Column="1" />
						<Label Content="Numerador" HorizontalAlignment="Left" Margin="22,85.527,0,0" VerticalAlignment="Top" d:LayoutOverrides="GridBox" />
						<TextBox x:Name="txtNumerador030" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="3" Margin="11,85.698,33,0" VerticalAlignment="Top"  Grid.Column="1" />
						<Button x:Name="btnAgregarItemIndicador030" Style="{DynamicResource btnAgregar}" Width="49.5" Content="Button"  TabIndex="11" HorizontalAlignment="Right" Margin="0,209.531,98,0" ToolTip="Agregar Item" Height="48" VerticalAlignment="Top"  Grid.Column="1" />
						<Button x:Name="btnEliminarItemIndicador030" Style="{DynamicResource btnEliminar}" Width="49.5" Content="Button"  TabIndex="12" HorizontalAlignment="Right" Margin="0,209.531,33,0" ToolTip="Eliminar Item" Height="48" VerticalAlignment="Top"  Grid.Column="1" />
						<TextBox BorderBrush="#FFE4E4E4" BorderThickness="1" Height="23.459" Margin="10,10,108,0" x:Name="txtItem030" Style="{DynamicResource SimpleTextBox3}" TabIndex="5" TextWrapping="Wrap" VerticalAlignment="Top" />
						<ComboBox x:Name="cbUnidadMedición030" Height="25.5" Style="{DynamicResource SimpleComboBox}" TabIndex="10" Margin="297,198.427,163,0" VerticalAlignment="Top" Grid.Column="1">
							<!--<ComboBoxItem Content="Tasa"/>
                        	<ComboBoxItem Content="Oportunidad"/>
                        	<ComboBoxItem Content="Proporción"/>
                        	<ComboBoxItem Content="Porcentaje"/>
                        	<ComboBoxItem Content="Número"/>-->
						</ComboBox>
						<Label Content="Unidad medición" Margin="186,199.427,0,0" Height="27.96" VerticalAlignment="Top" HorizontalAlignment="Left" Width="106.259" Grid.Column="1" />
					</Grid>
					<Button x:Name="btnBuscarIndicador030" Style="{DynamicResource btnBuscar}" Width="84" Height="69" Content="Button" ToolTip="Buscar Indicadores 030" Canvas.Left="459" Canvas.Top="488.5" TabIndex="13"  />
					<Button x:Name="btnGuardarIndicador030" Style="{DynamicResource btnGuardar}" Width="84" Height="69" Content="Button" Canvas.Left="531" Canvas.Top="488.5" ToolTip="Guardar Indicadores 030" TabIndex="14"  />
					<Button x:Name="btnImprimirIndicador030" Style="{DynamicResource btnImprimir}" Width="84" Height="69" Content="Button" Canvas.Left="612" Canvas.Top="488.5" ToolTip="Botón deshabilitado" TabIndex="15" IsEnabled="False" />
					<Button x:Name="btnLimpiarCampos030" Style="{DynamicResource btnLimpiar}" Height="69" Content="Button" Width="84" Canvas.Left="676.5" Canvas.Top="488.5" ToolTip="Limpiar campos" TabIndex="16"  />
					<Button x:Name="btnSalirIndicadores030" Style="{DynamicResource btnSalir4}" Width="84" Height="69" Content="Button" Canvas.Left="748.5" Canvas.Top="488.5" ToolTip="Salir" TabIndex="17"  />
				</Canvas>
			</TabItem>
			<TabItem x:Name="itemInformacion" Style="{DynamicResource SimpleTabItem}" Header="TabItem" Opacity="0" TabIndex="13" IsTabStop="False"  >
				<Canvas x:Name="Factura2" Margin="0,0,0.817,-7.96">
					<Canvas Width="804.099" Height="132.154" Canvas.Left="17.527" Canvas.Top="328.596"/>
					<Grid Width="834" Height="575.5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="rectangle4" Height="107.192" Margin="15.325,0,13.48,89.921" VerticalAlignment="Bottom" >
							<Rectangle.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Rectangle.RenderTransform>
							<Rectangle.Stroke>
	
								<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<GradientStop Color="#EEE" Offset="1"/>
									<GradientStop Color="#CCC"/>
								</LinearGradientBrush>
							</Rectangle.Stroke>
						</Rectangle>
						<Label Content="Fecha de creación" Margin="362.637,85.014,366.499,0" VerticalAlignment="Top" d:LayoutOverrides="Width"/>
						<Label Content="Nombre del indicador" Margin="25.846,58.043,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<Label Content="Fecha de revision" HorizontalAlignment="Right" Margin="0,85.014,117.148,0" VerticalAlignment="Top"/>
						<Label Content="Objetivo" Margin="25.846,171.156,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="54.449"/>
						<Label Content="Unidad de medición" Margin="25.846,258.419,0,287.126" HorizontalAlignment="Left"/>
						<Label Content="Numerador" HorizontalAlignment="Left" Margin="25.846,113.336,0,0" Height="28.778" VerticalAlignment="Top"/>
						<Label Content="Denominador" Margin="25.846,142.254,0,0" Height="27.96" VerticalAlignment="Top" HorizontalAlignment="Left" Width="84.292"/>
						<Label Content="Categoria del indicador" Margin="25.846,85.013,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
						<TextBox x:Name="txtDenominadorInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="6" Margin="174.5,143.264,32.683,0" VerticalAlignment="Top"  />
						<WindowsFormsHost Height="107.192" HorizontalAlignment="Left" Margin="15.325,378.387,0,0" x:Name="wfhIndicadoresInternos" VerticalAlignment="Top" Width="805.195" Background="White" Focusable="False">
							<System_Windows_Forms:DataGridView x:Name="GridIndicadoresInternos"   />
						</WindowsFormsHost>
						<Label Content="Desagregación" Margin="25.846,228.405,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
						<Label Content="Interpretación" Margin="25.846,199.275,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
						<Label Content="Fuente datos/Responsable" Margin="25.846,0,0,231.885" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
						<Label Content="Periodicidad" Margin="362.637,0,393,261.573" VerticalAlignment="Bottom" d:LayoutOverrides="Width"/>
						<Label Content="Meta" Margin="362.637,257.962,0,0" HorizontalAlignment="Left" Width="37.227" VerticalAlignment="Top"/>
						<Label Content="Ajuste por riesgos" Margin="25.846,287.388,0,262.149" HorizontalAlignment="Left" d:LayoutOverrides="Height"/>
						<Button x:Name="btnAgregarItemInternos" Style="{DynamicResource btnAgregar}" Width="49.5" Content="Button"  TabIndex="15" HorizontalAlignment="Right" Margin="0,283.652,128.11,243.848" ToolTip="Agregar Item" />
						<Button x:Name="btnEliminarItemInternos" Style="{DynamicResource btnEliminar}" Width="49.5" Content="Button"  TabIndex="16" HorizontalAlignment="Right" Margin="0,283.652,63.61,243.848" ToolTip="Eliminar Item"  />
						<ComboBox x:Name="cbDepartamentoIndicadorInterno" Height="25.5" Style="{DynamicResource SimpleComboBox}" TabIndex="0" Margin="174.5,27.039,35.423,0" VerticalAlignment="Top"   />
						<Label Content="Departamento" Margin="25.846,30.712,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<ComboBox x:Name="cbUnidadMediciónIndicadoresInternos" Style="{DynamicResource SimpleComboBox}" TabIndex="10" Margin="174.5,256.739,0,0" Height="25.5" VerticalAlignment="Top" HorizontalAlignment="Left" Width="176" >
							<!--<ComboBoxItem Content="Tasa"/>
							<ComboBoxItem Content="Oportunidad"/>
							<ComboBoxItem Content="Proporción"/>
							<ComboBoxItem Content="Porcentaje"/>
							<ComboBoxItem Content="Número"/>-->
						</ComboBox>
					</Grid>
					<Button x:Name="btnBuscarInternos" Style="{DynamicResource btnBuscar}" Width="84" Height="69" Content="Button" ToolTip="Buscar Indicadores Internos" Canvas.Left="459" Canvas.Top="488.5" TabIndex="17"  />
					<Button x:Name="btnGuardarInternos" Style="{DynamicResource btnGuardar}" Width="84" Height="69" Content="Button" Canvas.Left="531" Canvas.Top="488.5" ToolTip="Guardar Indicadores Internos" TabIndex="18" />
					<Button x:Name="btnImprimirInternos" Style="{DynamicResource btnImprimir}" Width="84" Height="69" Content="Button" Canvas.Left="612" Canvas.Top="488.5" ToolTip="Botón deshabilitado" TabIndex="19" IsEnabled="False" />
					<Button x:Name="btnLimpiarInternos" Style="{DynamicResource btnLimpiar}" Height="69" Content="Button" Width="84" Canvas.Left="676.5" Canvas.Top="488.5" ToolTip="Limpiar campos" TabIndex="20"  />
					<Button x:Name="btnSalirInternos" Style="{DynamicResource btnSalir4}" Width="84" Height="69" Content="Button" Canvas.Left="748.5" Canvas.Top="488.5" ToolTip="Salir" TabIndex="21" />
					<TextBox x:Name="txtFechaCreacionInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="99.03" Canvas.Left="502.5" Canvas.Top="86.127" Style="{DynamicResource SimpleTextBox3}" TabIndex="3"  />
					<TextBox x:Name="txtNombreIndicadorInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="57.519" Style="{DynamicResource SimpleTextBox3}" TabIndex="1"/>
					<TextBox x:Name="txtFechaRevisionInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="76.466" Canvas.Left="724.612" Canvas.Top="86.127" Style="{DynamicResource SimpleTextBox3}" TabIndex="4"  />
					<TextBox x:Name="txtObjetivoInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="171.812" Style="{DynamicResource SimpleTextBox3}" TabIndex="7"  />
					<TextBox x:Name="txtCategoriaInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="176" Canvas.Left="174.5" Canvas.Top="86.127" Style="{DynamicResource SimpleTextBox3}" TabIndex="2"  />
					<TextBox x:Name="txtNumeradorInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="114.735" Style="{DynamicResource SimpleTextBox3}" TabIndex="5"  />
					<TextBox x:Name="txtMetaInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="163.03" Canvas.Left="438.5" Canvas.Top="257.871" Style="{DynamicResource SimpleTextBox3}" TabIndex="11"/>
					<TextBox x:Name="txtInterpretacionInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="200.42" Style="{DynamicResource SimpleTextBox3}" TabIndex="8"  />
					<TextBox x:Name="txtFuentesResponsableInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="427.03" Canvas.Left="174.5" Canvas.Top="318.092" Style="{DynamicResource SimpleTextBox3}" TabIndex="14"  />
					<TextBox x:Name="txtPeriodicidadInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="163.03" Canvas.Left="438.5" Canvas.Top="287.489" Style="{DynamicResource SimpleTextBox3}" TabIndex="13"  />
					<TextBox x:Name="txtAjusteRiesgoInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="176" Canvas.Left="174.5" Canvas.Top="287.186" Style="{DynamicResource SimpleTextBox3}" TabIndex="12"  />
					<TextBox x:Name="txtDesagregacionInternos" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="229.028" Style="{DynamicResource SimpleTextBox3}" TabIndex="9" />
				</Canvas>
			</TabItem>
			<TabItem x:Name="itemFactura" Style="{DynamicResource SimpleTabItem}" Header="TabItem" Opacity="0" TabIndex="13" IsTabStop="False"  >
				<Canvas x:Name="Factura3" Margin="0,0,0.817,-7.96">
					<Canvas Width="804.099" Height="132.154" Canvas.Left="17.527" Canvas.Top="328.596"/>
					<Grid Width="834" Height="575.5">
						<Rectangle x:Name="rectangle5" Margin="15.325,265.04,13.48,89.921" >
							<Rectangle.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Rectangle.RenderTransform>
							<Rectangle.Stroke>
	
								<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<GradientStop Color="#EEE" Offset="1"/>
									<GradientStop Color="#CCC"/>
								</LinearGradientBrush>
							</Rectangle.Stroke>
						</Rectangle>
						<Label Content="Nombre del indicador" Margin="45.974,47.698,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<Label Content="Meta" HorizontalAlignment="Left" Margin="44.62,132.249,0,0" VerticalAlignment="Top"/>
						<Label Content="Justificación" Margin="374.036,132.249,386.24,0" VerticalAlignment="Top" d:LayoutOverrides="Width"/>
						<Label Content="Origen de la información" Margin="313.106,158.855,379.04,0" VerticalAlignment="Top" Height="29.955" d:LayoutOverrides="Width"/>
						<Label Content="Responsable" Margin="45.974,186.815,0,0" Height="27.96" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75.722"/>
						<Label Content="Periodicidad" HorizontalAlignment="Left" Margin="44.62,160.855,0,0" VerticalAlignment="Top"/>
						<TextBox x:Name="txtOrigenInformacionSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="7" Margin="0,157.75,32.198,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="342.842"  />
						<TextBox x:Name="txtResponsableSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Style="{DynamicResource SimpleTextBox3}" TabIndex="8" Margin="174.5,185.209,386.24,0" VerticalAlignment="Top" />
						<WindowsFormsHost Height="220.539" HorizontalAlignment="Left" Margin="15.325,265.04,0,0" x:Name="wfhIndicadoresSeguimiento_al_riesgo" VerticalAlignment="Top" Width="805.195" Background="White" Focusable="False">
							<System_Windows_Forms:DataGridView x:Name="GridIndicadores_Seguimiento_al_riesgo"  />
						</WindowsFormsHost>
						<Button x:Name="btnAgregarItemSeguimientoRiesgo" Style="{DynamicResource btnAgregar}" Width="49.5" Content="Button"  TabIndex="10" HorizontalAlignment="Right" Margin="0,204.209,103.698,0" ToolTip="Agregar Item" Height="48" VerticalAlignment="Top"  />
						<Button x:Name="btnEliminarItemSeguimientoRiesgo" Style="{DynamicResource btnEliminar}" Width="49.5" Content="Button"  TabIndex="11" HorizontalAlignment="Right" Margin="0,203.209,39.198,0" ToolTip="Eliminar Item" Height="48" VerticalAlignment="Top" />
						<Label Content="Numerador" Margin="45.974,75.658,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<Label Content="Denominador" Margin="45.974,103.618,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<ComboBox x:Name="cbUnidadMediciónSeguimientoRiesgo" Height="25.5" Style="{DynamicResource SimpleComboBox}" TabIndex="9" Margin="174.759,213.775,386.24,0" VerticalAlignment="Top" >
							<!--<ComboBoxItem Content="Tasa"/>
							<ComboBoxItem Content="Oportunidad"/>
							<ComboBoxItem Content="Proporción"/>
							<ComboBoxItem Content="Porcentaje"/>
							<ComboBoxItem Content="Número"/>-->
						</ComboBox>
						<Label Content="Unidad medición" Margin="44.5,214.775,0,0" Height="27.96" VerticalAlignment="Top" HorizontalAlignment="Left" Width="106"/>
						<ComboBox x:Name="cbDepartamentoSeguimientoRiesgo" Height="25.5" Style="{DynamicResource SimpleComboBox}" TabIndex="0" Margin="174.5,19.039,35.423,0" VerticalAlignment="Top"  />
						<Label Content="Departamento" Margin="45.846,21.712,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment"/>
						<Button x:Name="btnIngresarRiesgos" Background="#FFF4F4F4" Style="{DynamicResource btnCellos}" Height="21" Content="   Riesgos del indicador" RenderTransformOrigin="0.5,0.5" FontSize="13.333" BorderBrush="Black" Foreground="Black" TabIndex="18" ToolTip="Abonar"  Margin="0,187.668,227.5,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="147.54" Visibility="Collapsed">
							<Button.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Button.RenderTransform>
						
						</Button>
					</Grid>
					<Button x:Name="btnBuscarSeguimientoRiesgo" Style="{DynamicResource btnBuscar}" Width="84" Height="69" Content="Button" ToolTip="Buscar indicador seguimiento al riesgo" Canvas.Left="459" Canvas.Top="488.5" TabIndex="12"  />
					<Button x:Name="btnGuardarSeguimientoRiesgo" Style="{DynamicResource btnGuardar}" Width="84" Height="69" Content="Button" Canvas.Left="531" Canvas.Top="488.5" ToolTip="Guardar indicador seguimiento al riesgo" TabIndex="13" />
					<Button x:Name="btnImprimirSeguimientoRiesgo" Style="{DynamicResource btnImprimir}" Width="84" Height="69" Content="Button" Canvas.Left="612" Canvas.Top="488.5" ToolTip="Botón deshabilitado" TabIndex="14" IsEnabled="False" />
					<Button x:Name="btnLimpiarSeguimientoRiesgo" Style="{DynamicResource btnLimpiar}" Height="69" Content="Button" Width="84" Canvas.Left="676.5" Canvas.Top="488.5" ToolTip="Limpiar campos" TabIndex="15"  />
					<Button x:Name="btnSalirSeguimientoRiesgo" Style="{DynamicResource btnSalir4}" Width="84" Height="69" Content="Button" Canvas.Left="748.5" Canvas.Top="488.5" ToolTip="Salir" TabIndex="16"  />
					<TextBox x:Name="txtNombreIndicadorSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="47.724" Style="{DynamicResource SimpleTextBox3}" TabIndex="1"  />
					<TextBox x:Name="txtMetaSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="124.79" Canvas.Left="174.5" Canvas.Top="130.101" Style="{DynamicResource SimpleTextBox3}" TabIndex="4"  />
					<TextBox x:Name="txtJustificacionSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="343.448" Canvas.Left="459" Canvas.Top="130.101" Style="{DynamicResource SimpleTextBox3}" TabIndex="5" />
					<TextBox x:Name="txtPeriodicidadSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="124.79" Canvas.Left="174.5" Canvas.Top="157.56" Style="{DynamicResource SimpleTextBox3}" TabIndex="6" />
					<TextBox x:Name="txtNumeradorSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="75.183" Style="{DynamicResource SimpleTextBox3}" TabIndex="2" />
					<TextBox x:Name="txtDenominadorSeguimientoRiesgo" BorderBrush="#FFE4E4E4" Height="23.459" BorderThickness="2,1,1,1" TextWrapping="Wrap" Width="626.578" Canvas.Left="174.5" Canvas.Top="102.642" Style="{DynamicResource SimpleTextBox3}" TabIndex="3"  />
					<TextBox BorderBrush="#FFE4E4E4" BorderThickness="2,1,1,1" Canvas.Left="10" Canvas.Top="10" Height="13.04" x:Name="txtItemSeguimientoRiesgo" Style="{DynamicResource SimpleTextBox3}" TabIndex="5" TextWrapping="Wrap" Width="44.5" Visibility="Collapsed" />
				</Canvas>
			</TabItem>
			<TabItem x:Name="itemOdontograma" Style="{DynamicResource SimpleTabItem}" Header="TabItem" Opacity="0" TabIndex="13" IsTabStop="False"  >
				<Canvas x:Name="Factura1" Margin="0,0,0.817,-7.96">
					<Canvas Width="804.099" Height="132.154" Canvas.Left="17.527" Canvas.Top="328.596"/>
					<Grid Width="834" Height="575.5"/>
				</Canvas>
			</TabItem>
		</TabControl>
		<Button Content="Button" HorizontalAlignment="Right" Margin="0,294.668,-49.724,0" Style="{DynamicResource btnAgregar1}" Width="36" Height="33.332" VerticalAlignment="Top"/>
		<Button Content="Button" HorizontalAlignment="Right" Margin="0,294.668,-88.724,0" Style="{DynamicResource btnEliminarItem}" Width="36" Height="33.332" VerticalAlignment="Top"/>
	</Grid>
</Window>